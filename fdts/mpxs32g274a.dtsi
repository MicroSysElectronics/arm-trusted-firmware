/*
 * Copyright (C) 2021-2022 MicroSys Electronics GmbH
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */

/dts-v1/;
#include "s32g2.dtsi"
#include <dt-bindings/gpio/gpio.h>

/ {
	model = "MicroSys MPXS32G274A";

	leds: leds {
		compatible = "gpio-leds";
		user0 {
			label = "user0";
			gpios = <&gpio43_0 4 0>;
			default-state = "off";
		};
	};

	aliases {
		usb0 = &usbotg;
	};

	usbotg: usb@44064000 {
		compatible = "fsl,imx27-usb";
		reg = <0x0 0x44064000 0x0 0x200>;
		clocks = <&clks S32G_SCMI_CLK_USB_MEM>,
			   <&clks S32G_SCMI_CLK_USB_LOW>;
		pinctrl-0 = <&usb_pins>;
		pinctrl-names = "default";
		phys = <&saf1508_phy>;
		dr_mode = "host";
	};

	saf1508_phy: usb_phy@44064000 {
		compatible = "nxp,saf1508bet";
		reg = <0x0 0x44064000 0x0 0x200>;
		#phy-cells = <0>;
	};
};

&usbotg {
	status = "okay";
};

&pfe {
	status = "okay";

	pinctrl-0 = <&pfe0_pins>;
	pinctrl-1 = <>;
	pinctrl-2 = <&pfe1_pins>;
	pinctrl-3 = <>;
	pinctrl-4 = <&pfe2_pins>;
	pinctrl-5 = <>;
	pinctrl-6 = <&pfe0_mdio_pins>;
	pinctrl-7 = <&pfe1_mdio_pins>;
	pinctrl-8 = <&pfe2_mdio_pins>;
	pinctrl-names = "pfe0_rgmii", "pfe0_sgmii",
		"pfe1_rgmii", "pfe1_sgmii",
		"pfe2_rgmii", "pfe2_sgmii",
		"pfe_mdio0", "pfe_mdio1", "pfe_mdio2";

	pfe_mdio0: pfe_mdio0 {
		reg = <0x00>;
		compatible = "nxp,pfeng-mdio";
		status = "disabled";
	};

	pfe_mdio1: pfe_mdio1 {
		reg = <0x01>;
		compatible = "nxp,pfeng-mdio";
		status = "disabled";
	};

	pfe_mdio2: pfe_mdio2 {
		reg = <0x02>;
		compatible = "nxp,pfeng-mdio";
		status = "disabled";
	};
};

&usdhc0 {
	/* By default, sd0 pins are able to work at 100Mhz and 200Mhz */
	pinctrl-0 = <&sd0_pins>;
	pinctrl-1 = <>;
	pinctrl-2 = <>;
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	status = "okay";
};

&gmac0_mdio {
	status = "disabled";
};

&gmac0 {
	pinctrl-0 = <&gmac0_pins>;
	pinctrl-1 = <>;
	pinctrl-2 = <&gmac0_mdio_pins>;
	pinctrl-names = "gmac_rgmii", "gmac_sgmii", "gmac_mdio";
};

&uart0 {
	pinctrl-0 = <&uart0_pins>;
	pinctrl-names = "default";
	status = "okay";
};

&i2c0 {
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&i2c0_pins>;
	pinctrl-1 = <&i2c0_gpio_pins>;
	scl-gpios = <&gpio 17 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	sda-gpios = <&gpio 16 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	clock-frequency=<100000>;
	status = "okay";

	gpio43_0: gpio@43 {
		compatible = "fcs,fxl6408";
		reg = <0x43>;
		#gpio-cells = <2>;
		gpio-bank-name = "mpx0-";
		direction = [10];
		input-default-state = [0f];
		output-default-state = [00];
		pull-config = [10 0f]; /* pull-enable / pull-up/down */
		u-boot,i2c-offset-len = <1>; /* one address byte */
	};

	// PCA9561: EEPROM DIP switch
	pca9561: dip@4d {
		compatible = "nxp,pca9561";
		reg = <0x4d>;
	};

	pcf85263: rtc@51 {
		compatible = "pcf85263";
		reg = <0x51>;
	};

	eeprom@50 {
		compatible = "atmel,24c01a";
		reg = <0x50>;
	};

	at24c128: eeprom@54 {
		compatible = "atmel,24c128";
		reg = <0x54>;
		u-boot,i2c-offset-len = <2>; /* two address bytes */
		pagesize = <64>;
		page-write-delay = <5000>; /* 5ms delay when writing */
		max-speed = <400000>;
	};

	eeprom@56 {
		compatible = "atmel,24c01a";
		reg = <0x56>;
	};

};

&i2c1 {
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&i2c1_pins>;
	pinctrl-1 = <&i2c1_gpio_pins>;
	scl-gpios = <&gpio 19 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	sda-gpios = <&gpio 20 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	clock-frequency=<100000>;
	status = "disabled";
};

&i2c2 {
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&i2c2_pins>;
	pinctrl-1 = <&i2c2_gpio_pins>;
	scl-gpios = <&gpio 21 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	sda-gpios = <&gpio 22 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	clock-frequency=<100000>;
	status = "disabled";
};

/* PMIC */
&i2c4 {
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&i2c4_pins>;
	pinctrl-1 = <&i2c4_gpio_pins>;
	scl-gpios = <&gpio 34 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	sda-gpios = <&gpio 33 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	status = "okay";
	clock-frequency=<100000>;

	vr5510@20 {
		compatible = "nxp,vr5510";
		reg = <0x20>;
		status = "okay";
	};

	vr5510_fsu@21 {
		compatible = "nxp,vr5510";
		reg = <0x21>;
		status = "okay";
	};

};

&wkpu {
	status = "okay";
};

&qspi {
	pinctrl-0 = <&qspi_pins>;
	pinctrl-names = "default";
	status = "okay";

	/delete-node/ mx25uw51245g@0;

	mt35xu512aba@0 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "jedec,spi-nor";
		spi-max-frequency = <200000000>;
		spi-tx-bus-width = <8>;
		spi-rx-bus-width = <8>;
		reg = <0>;

		partition@0 {
			reg = <0 0x200000>;
			label = "boot";
		};

		partition@1 {
			reg = <0x3000000 0x28000>;
			label = "pfe";
		};
	};
};

&pinctrl {
	u-boot,dm-pre-reloc;

	i2c0_pins: i2c0 {
		i2c0_grp0 {
			pinmux = <S32CC_PINMUX(16, FUNC1)>,
				 <S32CC_PINMUX(17, FUNC1)>;
			drive-open-drain;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_83MHZ>;
		};

		i2c0_grp1 {
			pinmux = <S32CC_PINMUX(565, FUNC2)>,
				 <S32CC_PINMUX(566, FUNC2)>;
		};

	};

	i2c0_gpio_pins: i2c0_gpio {
		i2c0_gpio_grp0 {
			pinmux = <S32CC_PINMUX(16, FUNC0)>,
				 <S32CC_PINMUX(17, FUNC0)>;
			drive-open-drain;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		i2c0_gpio_grp1 {
			pinmux = <S32CC_PINMUX(565, FUNC0)>,
				 <S32CC_PINMUX(566, FUNC0)>;
		};

	};

	i2c1_pins: i2c1 {
		i2c1_grp0 {
			pinmux = <S32CC_PINMUX(19, FUNC1)>,
				 <S32CC_PINMUX(20, FUNC1)>;
			drive-open-drain;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_83MHZ>;
		};

		i2c1_grp1 {
			pinmux = <S32CC_PINMUX(717, FUNC2)>,
				 <S32CC_PINMUX(718, FUNC2)>;
		};

	};

	i2c1_gpio_pins: i2c1_gpio {
		i2c1_gpio_grp0 {
			pinmux = <S32CC_PINMUX(19, FUNC0)>,
				 <S32CC_PINMUX(20, FUNC0)>;
			drive-open-drain;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		i2c1_gpio_grp1 {
			pinmux = <S32CC_PINMUX(717, FUNC0)>,
				 <S32CC_PINMUX(718, FUNC0)>;
		};

	};

	i2c2_pins: i2c2 {
		i2c2_grp0 {
			pinmux = <S32CC_PINMUX(21, FUNC1)>,
				 <S32CC_PINMUX(22, FUNC1)>;
			drive-open-drain;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_83MHZ>;
		};

		i2c2_grp1 {
			pinmux = <S32CC_PINMUX(719, FUNC2)>,
				 <S32CC_PINMUX(720, FUNC2)>;
		};

	};

	i2c2_gpio_pins: i2c2_gpio {
		i2c2_gpio_grp0 {
			pinmux = <S32CC_PINMUX(21, FUNC0)>,
				 <S32CC_PINMUX(22, FUNC0)>;
			drive-open-drain;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		i2c2_gpio_grp1 {
			pinmux = <S32CC_PINMUX(719, FUNC0)>,
				 <S32CC_PINMUX(720, FUNC0)>;
		};

	};

	i2c4_pins: i2c4 {
		i2c4_grp0 {
			pinmux = <S32CC_PINMUX(33, FUNC1)>;
			drive-open-drain;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_83MHZ>;
		};

		i2c4_grp1 {
			pinmux = <S32CC_PINMUX(34, FUNC2)>;
			drive-open-drain;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_83MHZ>;
		};

		i2c4_grp2 {
			pinmux = <S32CC_PINMUX(724, FUNC3)>,
				 <S32CC_PINMUX(723, FUNC3)>;
		};

	};

	i2c4_gpio_pins: i2c4_gpio {
		i2c4_gpio_grp0 {
			pinmux = <S32CC_PINMUX(33, FUNC0)>,
				 <S32CC_PINMUX(34, FUNC0)>;
			drive-open-drain;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		i2c4_gpio_grp1 {
			pinmux = <S32CC_PINMUX(724, FUNC0)>,
				 <S32CC_PINMUX(723, FUNC0)>;
		};

	};

	qspi_pins: qspi {
		qspi_grp0 {
			pinmux = <S32CC_PINMUX(85, FUNC1)>,
				 <S32CC_PINMUX(86, FUNC1)>,
				 <S32CC_PINMUX(87, FUNC1)>,
				 <S32CC_PINMUX(88, FUNC1)>,
				 <S32CC_PINMUX(89, FUNC1)>,
				 <S32CC_PINMUX(90, FUNC1)>,
				 <S32CC_PINMUX(91, FUNC1)>,
				 <S32CC_PINMUX(92, FUNC1)>,
				 <S32CC_PINMUX(93, FUNC1)>;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
			bias-pull-down;
		};

		qspi_grp1 {
			pinmux = <S32CC_PINMUX(96, FUNC1)>,
				 <S32CC_PINMUX(97, FUNC1)>,
				 <S32CC_PINMUX(98, FUNC1)>,
				 <S32CC_PINMUX(99, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		qspi_grp2 {
			pinmux = <S32CC_PINMUX(100, FUNC1)>,
				 <S32CC_PINMUX(101, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
			bias-pull-up;
		};

		qspi_grp3 {
			pinmux = <S32CC_PINMUX(540, FUNC2)>,
				 <S32CC_PINMUX(541, FUNC2)>,
				 <S32CC_PINMUX(542, FUNC2)>,
				 <S32CC_PINMUX(543, FUNC2)>,
				 <S32CC_PINMUX(544, FUNC2)>,
				 <S32CC_PINMUX(545, FUNC2)>,
				 <S32CC_PINMUX(546, FUNC2)>,
				 <S32CC_PINMUX(547, FUNC2)>,
				 <S32CC_PINMUX(548, FUNC2)>;
		};

	};

	uart0_pins: uart0 {
		uart0_grp0 {
			pinmux = <S32CC_PINMUX(41, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_SLEW_83MHZ>;
		};

		uart0_grp1 {
			pinmux = <S32CC_PINMUX(42, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_83MHZ>;
		};
	};

	usb_pins: usb {
		usb_grp0 {
			pinmux = <S32CC_PINMUX(62, FUNC1)>,
				 <S32CC_PINMUX(63, FUNC1)>,
				 <S32CC_PINMUX(64, FUNC1)>,
				 <S32CC_PINMUX(65, FUNC1)>,
				 <S32CC_PINMUX(112, FUNC1)>,
				 <S32CC_PINMUX(188, FUNC1)>,
				 <S32CC_PINMUX(189, FUNC1)>,
				 <S32CC_PINMUX(190, FUNC1)>;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		usb_grp1 {
			pinmux = <S32CC_PINMUX(184, FUNC0)>,
				 <S32CC_PINMUX(185, FUNC0)>,
				 <S32CC_PINMUX(187, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		usb_grp2 {
			pinmux = <S32CC_PINMUX(186, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		usb_grp3 {
			pinmux = <S32CC_PINMUX(895, FUNC2)>,
				 <S32CC_PINMUX(896, FUNC2)>,
				 <S32CC_PINMUX(897, FUNC2)>,
				 <S32CC_PINMUX(898, FUNC2)>,
				 <S32CC_PINMUX(899, FUNC2)>,
				 <S32CC_PINMUX(900, FUNC2)>,
				 <S32CC_PINMUX(901, FUNC2)>,
				 <S32CC_PINMUX(902, FUNC2)>,
				 <S32CC_PINMUX(903, FUNC2)>,
				 <S32CC_PINMUX(904, FUNC2)>,
				 <S32CC_PINMUX(905, FUNC2)>;
		};

	};
};
